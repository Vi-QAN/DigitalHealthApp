// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebData;

#nullable disable

namespace WebData.Migrations
{
    [DbContext(typeof(DigitalHealthContext))]
    partial class DigitalHealthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebData.Models.AuthorizationRecord", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("AccessorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAuthorized")
                        .HasColumnType("bit");

                    b.Property<int?>("OwnedRecordsUserId")
                        .HasColumnType("int");

                    b.HasKey("OwnerId", "AccessorId");

                    b.HasIndex("OwnedRecordsUserId");

                    b.ToTable("AuthorizationRecords");
                });

            modelBuilder.Entity("WebData.Models.Information", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("FileHash")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultiAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "FileHash");

                    b.ToTable("Information", (string)null);
                });

            modelBuilder.Entity("WebData.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ContractAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("WebData.Models.AuthorizationRecord", b =>
                {
                    b.HasOne("WebData.Models.User", null)
                        .WithMany("AuthorizationRecords")
                        .HasForeignKey("OwnedRecordsUserId");
                });

            modelBuilder.Entity("WebData.Models.Information", b =>
                {
                    b.HasOne("WebData.Models.User", "User")
                        .WithMany("Information")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebData.Models.User", b =>
                {
                    b.Navigation("AuthorizationRecords");

                    b.Navigation("Information");
                });
#pragma warning restore 612, 618
        }
    }
}
